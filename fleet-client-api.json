{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Fleet Client API",
    "version" : "1.0.0-oas3"
  },
  "externalDocs" : {
    "url" : "https://external-fleet-api.readme.io"
  },
  "servers" : [ {
    "url" : "https://api.gett.com/api"
  } ],
  "security" : [ {
    "oAuth" : [ "ride_exchange" ]
  } ],
  "paths" : {
    "/v1/rex_dispatch/order/{order_id}/submit_external_order_id" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Submit Supplier order ID",
        "description" : "Optional. Submit Supplier order ID before driver assigned. Per agreement, shall be called by a supplier for on-demand rides only. Right after order request is received from Gett and order is successfully created on supplier system side. The API is to be used to report Gett an external_order_id (order ID from a supplier system) before Assign Driver call, so Gett will have a reference number that can be used if needed for manual operations, such as support channels, financial flows or reporting.",
        "operationId" : "submit_external_order_id",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.SubmitExternalOrderID"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Empty response"
          }
        }
      }
    },
    "/v1/rex_dispatch/order/{order_id}/reserve_future_order" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Reserve Future Order",
        "description" : "Reserve Future Order by Fleet - the reserve can optionally include driver details. This request indicates commitment by fleet to fulfill the future order. This request can be performed multiple times so different driver can be assigned until the order becomes active. <br> The responsibility of the fleet to call /accept API when driver is on the way to pickup, if the /accept API is not called Gett may assign the order to different driver",
        "operationId" : "reserve_future_order",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Ride info including order status, driver location, etc",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.FutureOrderReservation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response containing result of the reserve. The possible results are: ConfirmReserve|CancelledByUser|TimedOut|DriverIsBlocked|ReservedByAnother",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/models.Response.ReserveOrder_200"
                },
                "examples" : {
                  "ConfirmReserve" : {
                    "description" : "Successful order reservation",
                    "value" : {
                      "result" : "ConfirmReserve"
                    }
                  },
                  "CancelledByUser" : {
                    "description" : "Order previously cancelled from Gett side",
                    "value" : {
                      "result" : "CancelledByUser"
                    }
                  },
                  "TimedOut" : {
                    "description" : "Order offer expired",
                    "value" : {
                      "result" : "TimedOut"
                    }
                  },
                  "DriverIsBlocked" : {
                    "description" : "Driver was blocked on Gett side and cannot be assigned on any order. Please contact Gett for more info.",
                    "value" : {
                      "result" : "DriverIsBlocked"
                    }
                  },
                  "ReservedByAnother" : {
                    "description" : "Order accepted by another supplier",
                    "value" : {
                      "result" : "ReservedByAnother"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_dispatch/order/{order_id}/accept" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Assign Driver",
        "description" : "Confirm driver assignment/dispatch for order. This API can be called multiple times in order to reassign different drivers when state is 'Confirmed'",
        "operationId" : "accept",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the driver and their way to pick up",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.AcceptOrder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Response containing result of the accept. The possible results are: <br>ConfirmAccept - the accept was successful and driver should be on the way to pickup.  <br>CanceledByUser - the order was already canceled by user and no longer valid. <br>TimedOut - the order timed out Waiting for fleet response.  <br>AlreadyMatched - other driver took the ride. <br>DriverIsBlocked - accepting driver blocked by Gett. <br>DriverAssignedToAnotherOrder - Accepting driver is already assigned to another order <br> OrderChanged - order offer is no longer relevant since some changes were made.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/models.Response.AcceptOrder_200"
                },
                "examples" : {
                  "ConfirmAccept" : {
                    "description" : "Successful driver assignment",
                    "value" : {
                      "action" : "ConfirmAccept"
                    }
                  },
                  "CanceledByUser" : {
                    "description" : "Order previously cancelled from Gett side",
                    "value" : {
                      "action" : "CanceledByUser"
                    }
                  },
                  "AlreadyMatched" : {
                    "description" : "Order accepted by another supplier",
                    "value" : {
                      "action" : "AlreadyMatched"
                    }
                  },
                  "TimedOut" : {
                    "description" : "Order offer expired",
                    "value" : {
                      "action" : "TimedOut"
                    }
                  },
                  "OrderChanged" : {
                    "description" : "Order details changed and offer no longer relevant",
                    "value" : {
                      "action" : "OrderChanged"
                    }
                  },
                  "DriverIsBlocked" : {
                    "description" : "Driver was blocked on Gett side and cannot be assigned on any order. Please contact Gett for more info.",
                    "value" : {
                      "action" : "DriverIsBlocked"
                    }
                  },
                  "DriverAssignedToAnotherOrder" : {
                    "description" : "Gett doesn't allow to assigned driver on more than 1 active order at time.",
                    "value" : {
                      "action" : "DriverAssignedToAnotherOrder"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_ride/order/{order_id}/ride_update" : {
      "put" : {
        "tags" : [ "v1" ],
        "summary" : "Update Order Progress",
        "description" : "Control active ride progress",
        "operationId" : "ride_update",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Ride info including order status, driver location, fare, etc. Driver location, bearing, ETA and route can be skipped in case \"Batch Driver Heartbeat Update\" method is being used.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.RideUpdate"
              },
              "examples" : {
                "WayToPickup" : {
                  "value" : {
                    "ride_status" : "Confirmed",
                    "driver_location" : {
                      "lat" : 0.9971224558277,
                      "lng" : -1.14167644905146
                    },
                    "bearing" : 192,
                    "eta" : "2021-07-29 07:57:00.000 +01:00",
                    "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN"
                  }
                },
                "WaitingAtPickup" : {
                  "value" : {
                    "ride_status" : "Waiting",
                    "bearing" : 192,
                    "driver_location" : {
                      "lat" : 51.509312344635546,
                      "lng" : -0.088399238884449
                    },
                    "eta" : ""
                  }
                },
                "WayToDestination" : {
                  "value" : {
                    "ride_status" : "Driving",
                    "bearing" : 192,
                    "driver_location" : {
                      "lat" : 51.509312344635546,
                      "lng" : -0.088399238884449
                    },
                    "eta" : "2021-07-29 08:19:59.000 +01:00",
                    "route" : "skjyHpwPAApCBrIbj@ul@dFcEtk@wgAxw@kgCpMiuMpAerAqYcg@yZaeIaK`IgPnAsJePQsN"
                  }
                },
                "Completion" : {
                  "value" : {
                    "ride_status" : "Completed",
                    "driver_location" : {
                      "lat" : 57.9971224558277,
                      "lng" : 56.14167644905146
                    },
                    "bearing" : 192,
                    "arrived_at" : "2000-01-01T00:00:00.000Z",
                    "started_at" : "2000-01-01T00:00:00.000Z",
                    "ended_at" : "2021-07-29 08:20:00.000 +01:00",
                    "destination" : {
                      "lat" : 57.9971224558277,
                      "lng" : 56.14167644905146
                    },
                    "total_distance_meters" : 15000,
                    "route" : "skjyHpwPAApCBrIbj@ul@dFcEtk@wgAxw@kgCpMiuMpAerAqYcg@yZaeIaK`IgPnAsJePQsN",
                    "ride_fares" : {
                      "base_fare" : 10,
                      "extras" : [ {
                        "name" : "parking_fee",
                        "type" : "cost",
                        "cost" : 1
                      } ],
                      "currency" : "GBP"
                    },
                    "actual_stop_points" : {
                      "lat" : 1.1,
                      "lng" : -1.9,
                      "full_address" : "Heathrow"
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Request accepted",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "423" : {
            "description" : "Ride locked from updates",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_ride/order/drivers_progress" : {
      "put" : {
        "tags" : [ "v1" ],
        "summary" : "Batch Driver Heartbeat Update",
        "description" : "Addition to Update Order Request. Suggested to be used for high-volume integrations with 20+ active rides at a time. Allows to submit driver location information in batch for all active orders.",
        "operationId" : "batch_driver_update",
        "parameters" : [ {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Batch of driver location, ETA and route info for all active orders",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.DriverBatchUpdate"
              },
              "examples" : {
                "Multiple Orders Update" : {
                  "value" : {
                    "gl:10000000:00:0000AA" : {
                      "driver_location" : {
                        "lat" : 0.9971224558277,
                        "lng" : -1.14167644905146
                      },
                      "bearing" : 192,
                      "eta" : "2020-01-01 00:00:00.000 +00:00",
                      "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN"
                    },
                    "uk:235247281:35:1" : {
                      "driver_location" : {
                        "lat" : 0.9971224558277,
                        "lng" : -1.14167644905146
                      },
                      "bearing" : 192,
                      "eta" : "2020-01-01 00:00:00.000 +00:00",
                      "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN"
                    }
                  }
                },
                "Multiple Orders With Driver" : {
                  "value" : {
                    "gl:10000000:00:0000AA" : {
                      "driver_location" : {
                        "lat" : 0.9971224558277,
                        "lng" : -1.14167644905146
                      },
                      "bearing" : 192,
                      "eta" : "2020-01-01 00:00:00.000 +00:00",
                      "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN",
                      "is_upcoming" : true,
                      "previous_order_route" : "av~bE_{tsE`v~bE~ztsE",
                      "previous_order_eta" : "2020-04-21 15:40:59.031 +00:00",
                      "previous_order_id" : "uk:235247281:35:1:"
                    },
                    "uk:235247281:35:1" : {
                      "driver_location" : {
                        "lat" : 0.9971224558277,
                        "lng" : -1.14167644905146
                      },
                      "bearing" : 192,
                      "eta" : "2020-01-01 00:00:00.000 +00:00",
                      "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN",
                      "is_upcoming" : true,
                      "previous_order_route" : "av~bE_{tsE`v~bE~ztsE",
                      "previous_order_eta" : "2020-04-21 15:40:59.031 +00:00",
                      "previous_order_id" : ""
                    },
                    "uk:235247282:35:1" : {
                      "driver_location" : {
                        "lat" : 0.9971224558277,
                        "lng" : -1.14167644905146
                      },
                      "bearing" : 192,
                      "eta" : "2020-01-01 00:00:00.000 +00:00",
                      "route" : "skjyAApCBrIbj@ul@dFwgAxw@kgCpMiuMpAcg@yZaeIaK`IgPnAsJePQsN",
                      "is_upcoming" : true,
                      "previous_order_route" : "av~bE_{tsE`v~bE~ztsE",
                      "previous_order_eta" : "2020-04-21 15:40:59.031 +00:00",
                      "previous_order_id" : ""
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Request accepted",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "423" : {
            "description" : "Ride locked from updates",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_dispatch/order/{order_id}/unreserve_future_order" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Un-Reserve Future Order",
        "description" : "Un-Reserve Future Order by Fleet",
        "operationId" : "unreserve",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "reason for un-reservation - for e.g: No supply available",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.UnreserveOrderRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Response containing result of the unreserve. The possible results are: UnReservedSuccessfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/models.Response.UnreserveOrder_200"
                },
                "examples" : {
                  "UnReservedSuccessfully" : {
                    "description" : "Reservation withdrawn successfully",
                    "value" : {
                      "success" : true,
                      "reason" : "UnReservedSuccessfully"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_dispatch/order/{order_id}/reject" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Reject Order",
        "description" : "Reject Gett order - when order cannot be handled by fleet",
        "operationId" : "reject",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "reason for reject - for e.g: No supply available",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.RejectOrderRequest"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Request accepted",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_ride/order/{order_id}/cancel" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Cancel Order In Ride",
        "description" : "Cancel order by driver. This method is allowed during order states Confirmed and Waiting. When state is Waiting - the cancellation is only allowed after allowed Waiting time. The response will return if the operation was successful and if not the reason of failure (ReachedLimit|NotAllowedForOrder|NotAllowedForStatus|CancelNotPermitted|CancelNotPermittedYet).",
        "operationId" : "cancel",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cancellation parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.CancelOrderRequestFromFleet"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Response containing result of the cancel. <br>Possible results are: SuccessfullyCancelled|NotAllowedForStatus|CancelNotPermitted|CancelNotPermittedYet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/models.Response.CancelOrderFromFleet_200"
                },
                "examples" : {
                  "SuccessfullyCancelled" : {
                    "description" : "Cancellation executed",
                    "value" : {
                      "cancelled" : true,
                      "reason" : "SuccessfullyCancelled"
                    }
                  },
                  "NotAllowedForStatus" : {
                    "description" : "Cancellation is not allowed in current status",
                    "value" : {
                      "cancelled" : false,
                      "reason" : "NotAllowedForStatus"
                    }
                  },
                  "CancelNotPermittedYet" : {
                    "description" : "Cancellation is not allowed yet – too soon after arrival at pickup",
                    "value" : {
                      "cancelled" : false,
                      "reason" : "CancelNotPermittedYet",
                      "cancelallowedtime" : "2000-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_dispatch/order/{order_id}/unassign_driver" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Un-Assign Driver From Order",
        "description" : "Unassign driver from order and continue looking for a new driver",
        "operationId" : "unassign_driver",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "Fleet token issued by Gett",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Request accepted",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    },
    "/v1/rex_ride/order/{order_id}/stop_points" : {
      "post" : {
        "tags" : [ "v1" ],
        "summary" : "Stop point action",
        "description" : "Driver stop point action. The action can be of two types 'Arrived' or 'Departed'",
        "operationId" : "stop_points",
        "parameters" : [ {
          "name" : "order_id",
          "in" : "path",
          "description" : "order_id value received in the payload of Request ASAP/Future Order. I.e. gl:10000000:00:0000AA",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Fleet-Token",
          "in" : "header",
          "description" : "fleet token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "stop point action request",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/models.StopPointActionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Request accepted",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is missing or invalid",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Resource Not Found or Fleet Token is incorrect",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Limit of requests exceeded",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "headers" : {
              "X-RateLimit-Limit" : {
                "description" : "Request limit per defined interval.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Remaining" : {
                "description" : "The number of requests left for the time window.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-RateLimit-Reset" : {
                "description" : "The UTC date/time at which the current rate limit window resets.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            },
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "commonTypes.LatLng" : {
        "required" : [ "lat", "lng" ],
        "type" : "object",
        "properties" : {
          "lat" : {
            "type" : "number",
            "format" : "double"
          },
          "lng" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "models.SubmitExternalOrderID" : {
        "title" : "Submit External Order ID",
        "required" : [ "ride_info" ],
        "type" : "object",
        "properties" : {
          "ride_info" : {
            "$ref" : "#/components/schemas/models.SubmitExternalOrderID_ride_info"
          }
        }
      },
      "models.AcceptOrder" : {
        "title" : "Assign Driver (Dispatch)",
        "type" : "object",
        "properties" : {
          "ride_info" : {
            "$ref" : "#/components/schemas/models.RideInfo"
          }
        },
        "example" : {
          "ride_info" : {
            "external_order_id" : "12345AB",
            "pickup_instructions" : "Meet driver at arrivals hall next to Costa Coffee.",
            "driver_info" : {
              "car_color" : "Black",
              "car_model" : "Toyota Prius",
              "driver_id" : "1234A",
              "driver_license" : "1234567899",
              "driver_name" : "Driver",
              "driver_rating" : 4.9,
              "driver_phone_number" : "447700000000",
              "license_plate_number" : "123AB",
              "phv_license" : "123456789"
            },
            "driver_location" : {
              "lat" : 51.5020874,
              "lng" : -0.0797237
            },
            "will_arrive_at" : "2021-07-29 07:57:00.000 +01:00",
            "route_to_pickup" : "skjyHpwPAApCBrIbj@ul@dFcEtk@wgAxw@kgCpMiuMpAerAqYcg@yZaeIaK`IgPnAsJePQsN"
          }
        }
      },
      "models.RideInfo" : {
        "title" : "Ride Info",
        "required" : [ "driver_info", "external_order_id" ],
        "type" : "object",
        "properties" : {
          "external_order_id" : {
            "type" : "string",
            "description" : "<b>Required</b>. Fleet order ID for reference"
          },
          "pickup_instructions" : {
            "type" : "string",
            "description" : "Optional. Relevant for pickups at airports and large or complex venues. Text intrsuctions of where/how a passenger should find their driver."
          },
          "driver_info" : {
            "$ref" : "#/components/schemas/models.DriverInfo"
          },
          "driver_location" : {
            "$ref" : "#/components/schemas/commonTypes.LatLng"
          },
          "route_to_pickup" : {
            "type" : "string",
            "description" : "Polyline of driver route to pickup location. In case driver is completing another order, route from previous order dropoff to pickup."
          },
          "will_arrive_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "The timestamp of arrival to pickup",
            "format" : "date-time"
          },
          "is_upcoming" : {
            "type" : "boolean",
            "description" : "Optional. Can be provided in 'Confirmed' status. Flag signifying driver is currently completing another order on the way to current order pickup. Should be false once previous order is completed. Along with previous_order_route, previous_order_eta, previous_order_id can be optionally used for explicit communication to the rider that driver is currently dropping of a passenger of their previous order that is about to end. Should be used together with Batch Driver Heartbeat Update method."
          },
          "previous_order_route" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. Route from current driver location to previous order dropoff. Should not be sent once previous order is completed."
          },
          "previous_order_eta" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. ETA for previous order to dropoff the passenger. Should not be sent once previous order is completed."
          },
          "previous_order_id" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. ID of previous order driver is completing if previous order is also a Gett order. Otherwise should be blank."
          }
        }
      },
      "models.DriverInfo" : {
        "title" : "Driver Info",
        "required" : [ "driver_id", "driver_name", "driver_phone_number", "has_picture" ],
        "type" : "object",
        "properties" : {
          "car_color" : {
            "type" : "string"
          },
          "car_model" : {
            "type" : "string"
          },
          "driver_id" : {
            "type" : "string",
            "description" : "<b>Required</b>. Unique and consistent Driver ID"
          },
          "driver_name" : {
            "type" : "string",
            "description" : "<b>Required</b>. Full name of driver"
          },
          "driver_rating" : {
            "type" : "number",
            "description" : "Rating of driver in partner system with 1 decimal (4.9)",
            "format" : "float"
          },
          "has_picture" : {
            "type" : "boolean",
            "description" : "Indicates that driver picture is available for download through v1/ride_exchange/driver/:id/picture"
          },
          "driver_phone_number" : {
            "type" : "string",
            "description" : "<b>Required</b>. In international format, with or without leading plus sign."
          },
          "license_plate_number" : {
            "type" : "string",
            "description" : "Plate of driver vehicle (reg plate)"
          },
          "phv_license" : {
            "type" : "string",
            "description" : "UK-specific. Regulator license of driver (PCO)"
          },
          "fleet_name" : {
            "type" : "string",
            "description" : "Only required for aggregators. Name of a subfleet"
          },
          "fleet_tin" : {
            "type" : "string",
            "description" : "Only required for aggregators. Tax identification number of subfleet or unique ID. Should match the ID returned on a quote request for this specific subfleet."
          },
          "fleet_phone_number" : {
            "type" : "string",
            "description" : "Only required for aggregators. Phone number of a client support centre of a subfleet. In international format with or without leading plus sign."
          }
        },
        "description" : "<b>Required object</b>"
      },
      "models.FutureOrderReservation" : {
        "title" : "Reserve Order",
        "required" : [ "driver_info", "external_order_id" ],
        "type" : "object",
        "properties" : {
          "external_order_id" : {
            "type" : "string",
            "description" : "<b>Required</b>. Fleet order ID for reference"
          },
          "pickup_instructions" : {
            "type" : "string",
            "description" : "Optional. Relevant for pickups at airports and large or complex venues. Text intrsuctions of where/how a passenger should find their driver. Can be submitted or updated after the original reservation. The final confirmation should be submitted at Assign Driver."
          },
          "driver_info" : {
            "$ref" : "#/components/schemas/models.DriverInfo"
          }
        }
      },
      "models.RideUpdate" : {
        "title" : "Ride Update",
        "required" : [ "ride_status" ],
        "type" : "object",
        "properties" : {
          "ride_status" : {
            "type" : "string",
            "description" : "<b>Required</b>.Status of the ride. <br>One of 'Confirmed','Waiting','Driving','Completed'.  <br>'Confirmed' - when driver accepted the ride and on the way to pickup.  <br>'Waiting' - when driver arrive to pickup and Waiting for the rider.  <br>'Driving' - when driver picked up the rider and on the way to destination. <br>'Completed' - when arrived to destination and the ride is finished, in this case there are mandatory fields in this call: 'destination','arrived_at', 'started_at', 'ended_at','total_distance_meters'",
            "enum" : [ "Confirmed", "Waiting", "Driving", "Completed" ]
          },
          "driver_location" : {
            "$ref" : "#/components/schemas/commonTypes.LatLng"
          },
          "bearing" : {
            "maximum" : 359,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Current car direction bearing (azimuth)",
            "format" : "int64"
          },
          "eta" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "Estimated time of arrival. In status 'Confirmed' – ETA to pickup.  In status 'Waiting' or 'Driving' – ETA to destination.",
            "format" : "date-time"
          },
          "route" : {
            "type" : "string",
            "description" : "Polyline of driver route. In status 'Confirmed' – route to pickup.  In status 'Waiting' or 'Driving' – route to destination.  In status 'Completed' – actual route from pickup to destination."
          },
          "arrived_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "Required when status is 'Completed'. The actual timestamp when driver arrived to pickup",
            "format" : "date-time"
          },
          "started_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "Required when status is 'Completed'. The actual timestamp when ride started (passenger on board)",
            "format" : "date-time"
          },
          "ended_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "Required when status is 'Completed'. The actual timestamp when ride is Completed",
            "format" : "date-time"
          },
          "destination" : {
            "$ref" : "#/components/schemas/commonTypes.LatLng"
          },
          "total_distance_meters" : {
            "type" : "integer",
            "description" : "Required when status is 'Completed'. Total distance driven at the end of the ride.",
            "format" : "int64"
          },
          "ride_fares" : {
            "$ref" : "#/components/schemas/models.RideFares"
          },
          "actual_stop_points" : {
            "type" : "array",
            "description" : "Allowed only at 'Completed' status. Submission of unplanned stops or wait time at planned stops.",
            "items" : {
              "$ref" : "#/components/schemas/models.ActualStopPoint"
            }
          }
        }
      },
      "models.DriverBatchUpdate" : {
        "title" : "Driver Batch Update",
        "type" : "object",
        "properties" : {
          "order_id1" : {
            "$ref" : "#/components/schemas/models.DriverBatchUpdate_order_ids"
          },
          "order_id2" : {
            "$ref" : "#/components/schemas/models.DriverBatchUpdate_order_ids"
          },
          "order_idN" : {
            "$ref" : "#/components/schemas/models.DriverBatchUpdate_order_ids"
          }
        },
        "description" : "Body is formed is a structure of properties, each being formed of order_id of specific order. Inside each order_id structure, information about driver location, bearing, ETA and current route should be present. This method also submits additional information if driver is currerntly completing another ride before starting their way to the current order pickup location."
      },
      "models.DriverBatchUpdate_order_ids" : {
        "type" : "object",
        "properties" : {
          "driver_location" : {
            "$ref" : "#/components/schemas/commonTypes.LatLng"
          },
          "bearing" : {
            "maximum" : 359,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Current car direction bearing (azimuth)",
            "format" : "int64"
          },
          "eta" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "Estimated time of arrival. In status 'Confirmed' – ETA to pickup, should include take that it will take for driver to complete previous order if current is being assigned in chain.  In status 'Waiting' or 'Driving' – ETA to destination.",
            "format" : "date-time"
          },
          "route" : {
            "type" : "string",
            "description" : "Polyline of driver route. In status 'Confirmed' – route to pickup. In case driver is completing another order, route from previous order dropoff to pickup. In status 'Waiting' or 'Driving' – route to destination.  In status 'Completed' – actual route from pickup to destination."
          },
          "is_upcoming" : {
            "type" : "boolean",
            "description" : "Optional. Can be provided in 'Confirmed' status. Flag signifying driver is currently completing another order on the way to current order pickup. Should be false once previous order is completed."
          },
          "previous_order_route" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. Route from current driver location to previous order dropoff. Should not be sent once previous order is completed."
          },
          "previous_order_eta" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. ETA for previous order to dropoff the passenger. Should not be sent once previous order is completed."
          },
          "previous_order_id" : {
            "type" : "string",
            "description" : "Optional. Can be provided in 'Confirmed' status. ID of previous order driver is completing if previous order is also a Gett order. Otherwise should be blank."
          }
        }
      },
      "models.RejectOrderRequest" : {
        "title" : "Order Reject",
        "type" : "object",
        "properties" : {
          "reason" : {
            "$ref" : "#/components/schemas/models.Reason_in_response"
          }
        }
      },
      "models.UnreserveOrderRequest" : {
        "title" : "Order Unreserve",
        "type" : "object",
        "properties" : {
          "reason" : {
            "$ref" : "#/components/schemas/models.Reason_in_response"
          }
        }
      },
      "models.CancelOrderRequestFromFleet_cancellation_fare" : {
        "type" : "object",
        "properties" : {
          "cancellation_base_fare" : {
            "type" : "number",
            "format" : "double"
          },
          "waiting_time" : {
            "$ref" : "#/components/schemas/models.CancelOrderRequestFromFleet_cancellation_fare_waiting_time"
          },
          "tax_amount" : {
            "type" : "number",
            "format" : "double"
          },
          "total_fare" : {
            "type" : "number",
            "format" : "double"
          },
          "currency" : {
            "$ref" : "#/components/schemas/models.Currency_code"
          }
        },
        "description" : "Optional. To be used to submit paid cancellation cost if agreed that supplier calculates ones."
      },
      "models.CancelOrderRequestFromFleet_cancellation_fare_waiting_time" : {
        "type" : "object",
        "properties" : {
          "minutes_free" : {
            "type" : "integer"
          },
          "minutes_charged" : {
            "type" : "integer"
          },
          "waiting_time_cost" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "models.CancelOrderRequestFromFleet" : {
        "title" : "Order Cancellation",
        "type" : "object",
        "properties" : {
          "reason" : {
            "$ref" : "#/components/schemas/models.Reason_in_response"
          },
          "cancellation_fare" : {
            "$ref" : "#/components/schemas/models.CancelOrderRequestFromFleet_cancellation_fare"
          }
        }
      },
      "models.RideFares" : {
        "title" : "Ride Fares",
        "type" : "object",
        "properties" : {
          "base_fare" : {
            "type" : "number",
            "description" : "Base price of ride if agreed partner submits one",
            "format" : "double"
          },
          "waiting_time" : {
            "$ref" : "#/components/schemas/models.RideFares_waiting_time"
          },
          "surged" : {
            "type" : "boolean",
            "description" : "Flag if High demand was applied to ride fare. Submittable only with Base fare"
          },
          "surge_amount" : {
            "type" : "number",
            "description" : "Amount of High demand fee. Submittable only with Base fare",
            "format" : "double"
          },
          "extras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/models.RideExchangeExtra"
            }
          },
          "tax_amount" : {
            "type" : "number",
            "description" : "Amount of tax applied. Submittable only with Base fare",
            "format" : "double"
          },
          "total_fare" : {
            "type" : "number",
            "description" : "Amount of total price.",
            "format" : "double"
          },
          "currency" : {
            "$ref" : "#/components/schemas/models.Currency_code"
          }
        }
      },
      "models.RideFares_waiting_time" : {
        "type" : "object",
        "properties" : {
          "minutes_free" : {
            "type" : "number",
            "description" : "Amount of free minutes",
            "format" : "double"
          },
          "minutes_charged" : {
            "type" : "number",
            "description" : "Amount of paid minutes",
            "format" : "double"
          },
          "waiting_time_cost" : {
            "type" : "number",
            "description" : "amount of money paid for chargeable minutes",
            "format" : "double"
          }
        },
        "description" : "Info about wait time. Can be submitted with/without Base fare."
      },
      "models.RideExchangeExtra" : {
        "title" : "Extra Charges",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of any pre-agreed extra. Can be submitted with/without Base fare.",
            "enum" : [ "parking_fee" ]
          },
          "type" : {
            "type" : "string",
            "enum" : [ "cost" ]
          },
          "cost" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "models.Currency_code" : {
        "type" : "string",
        "description" : "Currency code for the final price.",
        "enum" : [ "GBP", "NIS", "USD", "EUR" ]
      },
      "models.StopPointActionRequest" : {
        "title" : "Stop Point Action",
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "description" : "Type of action. 'arrived' for action of arrival to stop point and 'departed' for action of leave.",
            "enum" : [ "arrived", "departed" ]
          },
          "id" : {
            "type" : "string",
            "description" : "Stop point ID as it was passed in current_order/future_order"
          },
          "time" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "<b>Required</b>. The timestamp of the stop point action.",
            "format" : "date-time"
          }
        }
      },
      "models.ActualStopPoint" : {
        "title" : "ActualStopPoint",
        "type" : "object",
        "properties" : {
          "lat" : {
            "type" : "number",
            "format" : "double"
          },
          "lng" : {
            "type" : "number",
            "format" : "double"
          },
          "full_address" : {
            "type" : "string"
          },
          "started_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "<b>Required</b>. The timestamp of arrival to stop point.",
            "format" : "date-time"
          },
          "ended_at" : {
            "pattern" : "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}.\\d{3} \\+\\d{2}:\\d{2}$",
            "type" : "string",
            "description" : "<b>Required</b>. The timestamp of departure from stop point.",
            "format" : "date-time"
          }
        }
      },
      "models.Reason_in_response" : {
        "type" : "string",
        "description" : "Reason of the request submission. Reason should be a type of string but can contain inside a JSON object with parameters of code, reason and description for the cancellaiton."
      },
      "models.Response.ReserveOrder_200" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string",
            "enum" : [ "ConfirmReserve", "CancelledByUser", "TimedOut", "DriverIsBlocked", "ReservedByAnother" ]
          }
        }
      },
      "models.Response.AcceptOrder_200" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "ConfirmAccept", "CanceledByUser", "AlreadyMatched", "TimedOut", "OrderChanged", "DriverIsBlocked", "DriverAssignedToAnotherOrder" ]
          }
        }
      },
      "models.Response.UnreserveOrder_200" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "reason" : {
            "type" : "string",
            "enum" : [ "UnReservedSuccessfully" ]
          }
        }
      },
      "models.Response.CancelOrderFromFleet_200" : {
        "type" : "object",
        "properties" : {
          "cancelled" : {
            "type" : "boolean"
          },
          "reason" : {
            "type" : "string",
            "enum" : [ "SuccessfullyCancelled", "NotAllowedForStatus", "CancelNotPermittedYet" ]
          },
          "cancelallowedtime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "models.SubmitExternalOrderID_ride_info" : {
        "required" : [ "external_order_id" ],
        "type" : "object",
        "properties" : {
          "external_order_id" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "Successful" : {
        "description" : "Request accepted",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string",
              "nullable" : true
            }
          }
        }
      },
      "BadRequest" : {
        "description" : "Bad Request",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Access token is missing or invalid",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string",
              "nullable" : true
            }
          }
        }
      },
      "NotFound" : {
        "description" : "Resource Not Found or Fleet Token is incorrect",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "RateLimitExceeded" : {
        "description" : "Limit of requests exceeded",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string",
              "nullable" : true
            }
          }
        }
      },
      "InternalError" : {
        "description" : "Internal Server Error",
        "headers" : {
          "X-RateLimit-Limit" : {
            "description" : "Request limit per defined interval.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Remaining" : {
            "description" : "The number of requests left for the time window.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "integer"
            }
          },
          "X-RateLimit-Reset" : {
            "description" : "The UTC date/time at which the current rate limit window resets.",
            "style" : "simple",
            "explode" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        },
        "content" : {
          "text/plain" : {
            "schema" : {
              "type" : "string",
              "nullable" : true
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oAuth" : {
        "type" : "oauth2",
        "description" : "This API uses OAuth 2 with the client credentials flow.",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "https://api.gett.com/v1/oauth/token",
            "scopes" : {
              "ride_exchange" : "production access"
            }
          }
        }
      }
    }
  },
  "x-api-id" : "fleet-client-api",
  "x-explorer-enabled" : true,
  "x-proxy-enabled" : true,
  "x-samples-enabled" : true,
  "x-samples-languages" : [ "curl", "node", "ruby", "javascript", "python" ]
}